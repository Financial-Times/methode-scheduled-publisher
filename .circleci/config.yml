references:

  container_config_aws_cli: &container_config_aws_cli
    working_directory: ~/project/build
    docker:
      - image: mesosphere/aws-cli

  container_config_lambda_node6: &container_config_lambda_node6
    working_directory: ~/project/build
    docker:
      - image: lambci/lambda:build-nodejs6.10

  workspace_root: &workspace_root
    ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  npm_cache_keys: &npm_cache_keys
    keys:
        - v1-dependency-npm-{{ checksum "package.json" }}-
        - v1-dependency-npm-{{ checksum "package.json" }}
        - v1-dependency-npm-

  cache_npm_cache: &cache_npm_cache
    save_cache:
        key: v1-dependency-npm-{{ checksum "package.json" }}-{{ epoch }}
        paths:
        - ./node_modules/

  restore_npm_cache: &restore_npm_cache
    restore_cache:
        <<: *npm_cache_keys

  filters_only_master_branch: &filters_only_master
    branches:
      only: master

  filters_only_staging_branch: &filters_only_staging
    branches:
      only: staging

version: 2

jobs:

  build:
    <<: *container_config_lambda_node6
    steps:
      - checkout
      - *restore_npm_cache
      - run:
          name: Install project dependencies
          command: npm install --no-package-lock
      - run:
          name: Update project dependencies
          command: npm update --dev --no-package-lock --no-save
      - *cache_npm_cache
      - run:
          name: Run build script
          command: bash build.sh
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  deploy-staging:
    <<: *container_config_aws_cli
#    environment:
#      AWS_ACCESS_KEY_ID: ??
#      AWS_SECRET_ACCESS_KEY: ??
#      AWS_DEFAULT_REGION: eu-west-1
    steps:
      - *attach_workspace
      - add_ssh_keys
      - run:
          name: Run deploy script
          command: bash sh/deploy.sh $AWSKEY_TEST $AWSSECRETKEY_TEST

  # $AWSKEY_PROD $AWSSECRETKEY_PROD

workflows:

  version: 2

  build-deploy-staging:
    jobs:
      - build:
          filters:
            <<: *filters_only_staging
      - deploy-staging:
          requires:
            - build

notify:
  webhooks:
    - url: https://ft-next-webhooks.herokuapp.com/circleci2-workflow
